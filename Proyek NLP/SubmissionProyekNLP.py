# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10pTJxFwdXQJl-ZjCoGsXUhpaKB6gPDs6
"""

import pandas as pd

df = pd.read_csv('spam.csv', encoding = 'latin-1')
df.head

category = pd.get_dummies(df.v1)
category

new_df = pd.concat([df,category], axis=1)
new_df = new_df.drop(columns='v1')
new_df.head

input = new_df['v2'].values
label = new_df[['ham', 'spam']].values

input

label

from sklearn.model_selection import train_test_split

kalimat_latih, kalimat_test, y_latih, y_test = train_test_split(input, label, test_size=0.2)

from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences

token = Tokenizer(num_words = 5000, oov_token = '_')

token.fit_on_texts(kalimat_latih)

sequence_latih = token.texts_to_sequences(kalimat_latih)
sequence_test = token.texts_to_sequences(kalimat_test)

padded_latih = pad_sequences(sequence_latih)
padded_test = pad_sequences(sequence_test)

import tensorflow as tf

model = tf.keras.Sequential([
    tf.keras.layers.Embedding(input_dim = 5000, output_dim = 16),
    tf.keras.layers.LSTM(32, dropout = 0.5),
    tf.keras.layers.Dense(8, activation = 'relu'),
    tf.keras.layers.Dense(32, activation = 'relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(32, activation = 'relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(8),
    tf.keras.layers.Dense(2, activation = 'softmax')
])

model.compile(
    loss = 'categorical_crossentropy',
    optimizer = 'Adam',
    metrics = ['accuracy']
)

class MyCallBack(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs={}):
    if(logs.get('accuracy')>0.9):
      print("\nAkurasi sudah melebihi 90%")
      self.model.stop_training = True
callbacks = MyCallBack()

history = model.fit(
    padded_latih, y_latih,
    epochs = 25,
    validation_data = (padded_test,y_test),
    callbacks = [callbacks]
)